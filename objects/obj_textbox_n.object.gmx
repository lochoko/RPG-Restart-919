<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_textbox_n</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set variables

text = "";
name = "";
tspd = .5;
tfnt = "";
width = "";
height = "";
text_length = 0;
message[0] = "";
i = 1;
anim = 0;

tcolor = c_white;

cutoff = 0;
t = 0;

tdone = false;
message_current = 1;
maniplen = 1;

// Location of top left coord for Text Box
tx1 = 20;
ty1 = window_get_height()*.7;

// Positions for each of the 4 Text Sprites
cx1 = window_get_width() * .65;
cy1 = ty1;
cx2 = window_get_width() * .36;
cy2 = ty1;
cx3 = window_get_width() * .85;
cy3 = ty1;
cx4 = window_get_width() * .15;
cy4 = ty1;

// Text Sprite variables

cid[1] = "";
cindex[1] = 0;

cid[2] = "";
cindex[2] = 0;

cid[3] = "";
cindex[3] = 0;

cid[4] = "";
cindex[4] = 0;


cactive = 1;


//Speed Manip

spdm[0] = .25
spdm[1] = .5
spdm[2] = .75
spdm[3] = 1

// Custom colors

col[0] = c_white; // Default color
col[1] = c_red;
col[2] = c_blue;
col[3] = c_aqua;
col[4] = c_dkgray;
col[5] = c_black;
col[6] = c_yellow;
col[7] = c_purple;
col[8] = c_green;
col[9] = c_silver;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Boxes and Text Sprites

draw_set_font(tfnt);
draw_set_color(col[0]);

message_end = array_length_1d(message) - 1;

if string_char_at(message[message_current], 1) == "["
    scr_text_manip(message[message_current]);

 
    
        // Draw Text Box
        draw_set_alpha(.9);
        draw_rectangle_colour(tx1, ty1, window_get_width() - 30, window_get_height() - 30, c_blue, c_aqua, c_blue, c_aqua, 0);
        draw_set_alpha(1);
        draw_rectangle_colour(tx1, ty1, window_get_width() - 30, window_get_height() - 30, c_black, c_black, c_black, c_black, 1);
        
        // draw Name Box
        if (name != "")
        {
            draw_set_alpha(.9);
            draw_rectangle_colour(tx1, ty1, 300, ty1-60, c_gray, c_gray, c_gray, c_gray, 0);
            draw_set_alpha(1);
            draw_set_color(c_white);
            draw_text(tx1 + 12, ty1-45, name);
        }
        
        
        //draw_sprite(spr_textbox, 0, 0, window_get_height()*.70);
        
        // draw Text Sprites
        if (cid[1] != "")
            if (cactive == 1) 
                draw_sprite_ext(cid[1], cindex[1], cx1, cy1, 1.5, 1.5, 0, c_white, 1);
            else
                draw_sprite_ext(cid[1], cindex[1], cx1, cy1, 1.5, 1.5, 0, c_dkgray, 1);
        
        if (cid[2] != "") 
            if (cactive == 2)
                draw_sprite_ext(cid[2], cindex[2], cx2, cy2, -1.5, 1.5, 0, c_white, 1);
            else
                draw_sprite_ext(cid[2], cindex[2], cx2, cy2, -1.5, 1.5, 0, c_dkgray, 1);
                
        if (cid[3] != "") 
            if (cactive == 3)
                draw_sprite_ext(cid[3], cindex[3], cx3, cy3, 1.5, 1.5, 0, c_white, 1);
            else
                draw_sprite_ext(cid[3], cindex[3], cx3, cy3, 1.5, 1.5, 0, c_dkgray, 1);
            
        if (cid[4] != "") 
            if (cactive == 4)
                draw_sprite_ext(cid[4], cindex[4], cx4, cy4, -1.5, 1.5, 0, c_white, 1);
            else
                draw_sprite_ext(cid[4], cindex[4], cx4, cy4, -1.5, 1.5, 0, c_dkgray, 1);
        
        // End of Draw Boxes and Text Sprites
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// run/draw text


// Variables for Typewriter

    var charWidth = 32;
    var lineEnd = 55;
    var line = 0;
    var space = 0;
        maniplen = 0;
        i = 0;
        
if (message_end &gt; 0)
{
    //Text position
    tX = tx1 + 20;
    tY = ty1 + 15;
    
    //Next Message
    if (keyboard_check_pressed(ord(global.act_key)) &amp;&amp; global.convo == true)
    {
        // If there are more messages, go to the next one
        if (message_current &lt;= message_end &amp;&amp; cutoff &lt; string_length(message[message_current])) {
            cutoff = string_length(message[message_current]);
        } else if (message_current &lt; message_end &amp;&amp; tdone = false) {
            message_current++;
            cutoff = 0;
        } else {
            tdone = true;
            global.convo = false;
            instance_destroy();
            exit;
        }
    }

    global.convo = true;
    
    // Draw event
   
        //Draw Dialog
        
        while (i &lt;= string_length(message[message_current]) &amp;&amp; i &lt; cutoff)
        {
        
        if string_copy(message[message_current], i, 1) == "#"
                {
                   space = 0;
                   line++;
                   i++;
                }
        while string_copy(message[message_current], i, 1) == "|"
            {
              switch(string_copy(message[message_current], i + 1, 1))
              {

              case "C":
              {
                draw_set_color(col[real(string_copy(message[message_current], i + 2, 1))]);
                curr_char = (real(string_copy(message[message_current], i + 2, 1)));
              }
              
              case "S":
              {
                tspd = spdm[real(string_copy(message[message_current], i + 2, 1))];
              }
              case "A":
              {
                anim = real(string_copy(message[message_current], i + 2, 1));
              }
              
             }    
            i = i + 3;
            }     

            
            if (i == 0) i = 1;
            if anim = 0
            {
                draw_text(tX+(space*charWidth), tY+(34*line), string_copy(message[message_current], i, 1));
            } else if anim = 1
            {
                draw_text(tX+(space*charWidth)+random(5), tY+(34*line)+random(5), string_copy(message[message_current], i, 1));
            }
            space++;
            i++;
       }
 cutoff += tspd;
 }

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
